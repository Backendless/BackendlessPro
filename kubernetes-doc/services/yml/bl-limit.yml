apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "35"
    field.cattle.io/creatorId: user-s628q
  generation: 44
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-bl-limit
  name: bl-limit
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-bl-limit
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-01-30T08:08:31Z"
        field.cattle.io/ports: '[[{"containerPort":2992,"dnsName":"bl-limit-nodeport","kind":"NodePort","name":"3050tcp305001","protocol":"TCP","sourcePort":30500}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-bl-limit
    spec:
      containers:
        - env:
            - name: BL_CONSUL_HOST
              valueFrom:
                configMapKeyRef:
                  key: BL_CONSUL_HOST
                  name: bl-env
                  optional: false
            - name: BL_CONSUL_PORT
              valueFrom:
                configMapKeyRef:
                  key: BL_CONSUL_PORT
                  name: bl-env
                  optional: false
            - name: BL_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: backendless/bl-limit:6.1.0.dev
          imagePullPolicy: Always
          name: bl-limit
          ports:
            - containerPort: 2992
              name: 3050tcp305001
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /opt/backendless/logs
            name: logs
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: dockerhub-backendless
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /opt/backendless/logs/bl-limit/
          type: ""
        name: logs
